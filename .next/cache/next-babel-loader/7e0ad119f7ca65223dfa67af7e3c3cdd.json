{"ast":null,"code":"var _jsxFileName = \"/Users/shuhei/Desktop/next-practice/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nconst Post = props => {\n  const router = useRouter();\n  let sample = \"\";\n\n  if (!props.show == null) {\n    sample = __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }\n    }, \"Title:\", props.show.name);\n    {\n      console.log(props.show);\n    }\n\n    __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, props.show.summary.replace(/<[/]?[pb]>/g, \"\"));\n\n    {\n      props.show.image ? __jsx(\"img\", {\n        src: props.show.image.medium,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 26\n        }\n      }) : null;\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(Link, {\n    href: \"/blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Blog\")), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, router.query.id), sample);\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  console.log(context.query);\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json(); // console.log(`Fetched show: ${show.name}`);\n\n  return {\n    show\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/shuhei/Desktop/next-practice/pages/p/[id].js"],"names":["useRouter","Link","Post","props","router","sample","show","name","console","log","summary","replace","image","medium","query","id","getInitialProps","context","res","fetch","json"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAIK,MAAM,GAAG,EAAb;;AACA,MAAI,CAACF,KAAK,CAACG,IAAP,IAAe,IAAnB,EAAyB;AACvBD,IAAAA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWF,KAAK,CAACG,IAAN,CAAWC,IAAtB,CAAT;AACA;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,IAAlB;AACD;;AACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAK,CAACG,IAAN,CAAWI,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ;;AACA;AACER,MAAAA,KAAK,CAACG,IAAN,CAAWM,KAAX,GAAmB;AAAK,QAAA,GAAG,EAAET,KAAK,CAACG,IAAN,CAAWM,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB,GAA2D,IAA3D;AACD;AACF;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,MAAM,CAACU,KAAP,CAAaC,EAAlB,CAPF,EAQGV,MARH,CADF;AAYD,CAzBD;;AA0BAH,IAAI,CAACc,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C,QAAM;AAAEF,IAAAA;AAAF,MAASE,OAAO,CAACH,KAAvB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAO,CAACH,KAApB;AAEA,QAAMI,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAA+BJ,EAAG,EAApC,CAAvB;AACA,QAAMT,IAAI,GAAG,MAAMY,GAAG,CAACE,IAAJ,EAAnB,CAL8C,CAO9C;;AAEA,SAAO;AAAEd,IAAAA;AAAF,GAAP;AACD,CAVD;;AAWA,eAAeJ,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nconst Post = (props) => {\n  const router = useRouter();\n  let sample = \"\";\n  if (!props.show == null) {\n    sample = <h1>Title:{props.show.name}</h1>;\n    {\n      console.log(props.show);\n    }\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, \"\")}</p>;\n    {\n      props.show.image ? <img src={props.show.image.medium} /> : null;\n    }\n  }\n  return (\n    <div>\n      <Link href=\"/\">\n        <a>Home</a>\n      </Link>\n      <Link href=\"/blog\">\n        <a>Blog</a>\n      </Link>\n      <h5>{router.query.id}</h5>\n      {sample}\n    </div>\n  );\n};\nPost.getInitialProps = async function (context) {\n  const { id } = context.query;\n  console.log(context.query);\n\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  // console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}