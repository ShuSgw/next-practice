{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shuhei/Desktop/next-practice/pages/blog.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// blogs\nimport withLayout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar PostLink = function PostLink(props) {\n  return __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, __jsx(Link, {\n    href: \"/post?title=\".concat(props.title),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, props.title)));\n};\n\nvar DynamicpostLink = function DynamicpostLink(props) {\n  return __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(props.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, props.id)));\n};\n\nvar Blog = function Blog(props) {\n  var getInitialProps = function getInitialProps() {\n    var res, data;\n    return _regeneratorRuntime.async(function getInitialProps$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(\"Show data fetched. Count: \".concat(data.length));\n            return _context.abrupt(\"return\", {\n              shows: data.map(function (entry) {\n                return entry.show;\n              })\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, console.log(props), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Blog List\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(PostLink, {\n    title: \"Hello World\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(PostLink, {\n    title: \"Learn Next.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Blog List (Dynamic)\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(DynamicpostLink, {\n    id: \"Hello World\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(DynamicpostLink, {\n    id: \"Learn Next.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}; // Blog.getInitialProps = async function () {\n//   const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map((entry) => entry.show),\n//   };\n// };\n\n\nexport default withLayout(Blog);","map":{"version":3,"sources":["/Users/shuhei/Desktop/next-practice/pages/blog.js"],"names":["withLayout","Link","fetch","PostLink","props","title","DynamicpostLink","id","Blog","getInitialProps","res","json","data","console","log","length","shows","map","entry","show"],"mappings":";;;;;;;AAAA;AACA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,wBAAiBA,KAAK,CAACC,KAAvB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACC,KAAV,CADF,CADF,CADe;AAAA,CAAjB;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD;AAAA,SACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQA,KAAK,CAACG,EAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACG,EAAV,CADF,CADF,CADsB;AAAA,CAAxB;;AAQA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACJ,KAAD,EAAW;AACtB,MAAMK,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJP,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBQ,YAAAA,GADgB;AAAA;AAAA,6CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,YAAAA,IAFgB;AAGtBC,YAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAHsB,6CAIf;AACLC,cAAAA,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,UAACC,KAAD;AAAA,uBAAWA,KAAK,CAACC,IAAjB;AAAA,eAAT;AADF,aAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,CAACC,GAAR,CAAYV,KAAZ,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,EAAE,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,eAAD;AAAiB,IAAA,EAAE,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,CADF;AAeD,CAxBD,C,CA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,UAAU,CAACQ,IAAD,CAAzB","sourcesContent":["// blogs\nimport withLayout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst PostLink = (props) => (\n  <li>\n    <Link href={`/post?title=${props.title}`}>\n      <a>{props.title}</a>\n    </Link>\n  </li>\n);\n\nconst DynamicpostLink = (props) => (\n  <li>\n    <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n      <a>{props.id}</a>\n    </Link>\n  </li>\n);\n\nconst Blog = (props) => {\n  const getInitialProps = async function () {\n    const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n    const data = await res.json();\n    console.log(`Show data fetched. Count: ${data.length}`);\n    return {\n      shows: data.map((entry) => entry.show),\n    };\n  };\n  return (\n    <div>\n      {console.log(props)}\n      <h2>Blog List</h2>\n      <ul>\n        <PostLink title=\"Hello World\" />\n        <PostLink title=\"Learn Next.js\" />\n      </ul>\n      <h2>Blog List (Dynamic)</h2>\n      <ul>\n        <DynamicpostLink id=\"Hello World\" />\n        <DynamicpostLink id=\"Learn Next.js\" />\n      </ul>\n    </div>\n  );\n};\n\n// Blog.getInitialProps = async function () {\n//   const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map((entry) => entry.show),\n//   };\n// };\n\nexport default withLayout(Blog);\n"]},"metadata":{},"sourceType":"module"}