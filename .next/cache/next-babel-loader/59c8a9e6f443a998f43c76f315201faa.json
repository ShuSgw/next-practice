{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shuhei/Desktop/next-practice/pages/p/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nvar Post = function Post(props) {\n  var router = useRouter();\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(Link, {\n    href: \"/blog\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Blog\")), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, router.query.id), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Title:\", props.show.name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, props.show.summary.replace(/<[/]?[pb]>/g, \"\")));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          console.log(context.query);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          show = _context.sent;\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/shuhei/Desktop/next-practice/pages/p/[id].js"],"names":["useRouter","Link","Post","props","router","query","id","show","name","summary","replace","getInitialProps","context","console","log","fetch","res","json"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,EAAlB,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWH,KAAK,CAACI,IAAN,CAAWC,IAAtB,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACI,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CATF,CADF;AAaD,CAfD;;AAgBAR,IAAI,CAACS,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbN,UAAAA,EADa,GACNM,OAAO,CAACP,KADF,CACbC,EADa;AAErBO,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACP,KAApB;AAFqB;AAAA,2CAIHU,KAAK,wCAAiCT,EAAjC,EAJF;;AAAA;AAIfU,UAAAA,GAJe;AAAA;AAAA,2CAKFA,GAAG,CAACC,IAAJ,EALE;;AAAA;AAKfV,UAAAA,IALe;AAAA,2CASd;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WATc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,eAAeL,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nconst Post = (props) => {\n  const router = useRouter();\n  return (\n    <div>\n      <Link href=\"/\">\n        <a>Home</a>\n      </Link>\n      <Link href=\"/blog\">\n        <a>Blog</a>\n      </Link>\n      <h5>{router.query.id}</h5>\n      <h1>Title:{props.show.name}</h1>\n      <p>{props.show.summary.replace(/<[/]?[pb]>/g, \"\")}</p>\n    </div>\n  );\n};\nPost.getInitialProps = async function (context) {\n  const { id } = context.query;\n  console.log(context.query);\n\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  // console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}