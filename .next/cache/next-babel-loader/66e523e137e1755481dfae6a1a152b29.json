{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shuhei/Desktop/next-practice/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport useSWR from \"swr\";\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n};\n\nvar Index = function Index() {\n  var _useSWR = useSWR(\"/api/randomQuote\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // const author = data.author;\n\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = (_readOnlyError(\"quote\"), \"Loading...\");\n  if (error) quote = (_readOnlyError(\"quote\"), \"Failed to fetch the quote.\");\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Index Page\"), __jsx(\"div\", {\n    className: \"quote\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"author\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }\n  }, \"- \", author));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/shuhei/Desktop/next-practice/pages/index.js"],"names":["Layout","useSWR","fetcher","url","fetch","then","r","json","Index","data","error","author","quote"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,IAAF,EAAP;AAAA,GAAhB,CAAT;AAAA,CAAhB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,gBACMP,MAAM,CAAC,kBAAD,EAAqBC,OAArB,CADZ;AAAA,MACVO,IADU,WACVA,IADU;AAAA,MACJC,KADI,WACJA,KADI,EAElB;;;AACA,MAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAMC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAApB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,6BAAG,YAAH,CAAL;AACX,MAAIF,KAAJ,EAAWE,KAAK,6BAAG,4BAAH,CAAL;AAEX,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CAFF,EAGGD,MAAM,IAAI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAHb,CADF;AAOD,CAhBD;;AAkBA,eAAeH,KAAf","sourcesContent":["import Layout from \"../components/MyLayout\";\nimport useSWR from \"swr\";\n\nconst fetcher = (url) => fetch(url).then((r) => r.json());\nconst Index = () => {\n  const { data, error } = useSWR(\"/api/randomQuote\", fetcher);\n  // const author = data.author;\n  const author = data?.author;\n  const quote = data?.quote;\n\n  if (!data) quote = \"Loading...\";\n  if (error) quote = \"Failed to fetch the quote.\";\n\n  return (\n    <Layout>\n      <p>Index Page</p>\n      <div className=\"quote\">{quote}</div>\n      {author && <span className=\"author\">- {author}</span>}\n    </Layout>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}